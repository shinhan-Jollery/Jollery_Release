<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinhan.chat">

	<!-- 채팅 저장 -->
	<insert id="saveChat" parameterType="ChatsVO">
		INSERT INTO chats (room_id, member_id, chat_message, chat_time, chat_image1, chat_image2, chat_image3)
		VALUES (#{room_id}, #{member_id}, #{chat_message}, DATE_ADD(NOW(), INTERVAL 9 HOUR), #{chat_image1}, #{chat_image2}, #{chat_image3})
	</insert>

	<!-- 채팅방 생성 -->
	<insert id="createRoom" parameterType="ChatRoomsVO">
		INSERT INTO chat_rooms (member_id, art_id)
		VALUES (#{member_id}, #{art_id})
	</insert>
	
	<!-- 채팅방 정보 조회 -->
	<select id="checkExistRoom" parameterType="ChatRoomsVO" resultType="int">
		SELECT *
		FROM chat_rooms
		WHERE member_id = #{member_id} AND art_id = #{art_id}
	</select>

	<!-- 사용자의 작품번호 목록 조회 -->
	<select id="getArtListByMember" parameterType="int"
		resultType="int">
		SELECT art_id
		FROM arts
		WHERE member_id = #{member_id}
	</select>

	<!-- 사용자의 채팅방 목록 조회 -->
	<select id="getChatRoomListByMember" parameterType="int" resultType="ChatRoomsVO">
		SELECT DISTINCT r.*
		FROM chat_rooms r JOIN arts a ON r.art_id = a.art_id
		WHERE r.member_id = #{member_id} OR a.member_id = #{member_id}
	</select>

	<!-- member_id로 이름 조회 -->
	<select id="getNameByMemberId" parameterType="int" resultType="String">
		SELECT member_name
		FROM members
		WHERE member_id = #{member_id}
	</select>

	<!-- art_id로 사용자 조회 -->
	<select id="getMemberByArtId" parameterType="int" resultType="MembersVO">
		SELECT *
		FROM arts a JOIN members m ON a.member_id = m.member_id
		WHERE a.art_id = #{art_id}
	</select>

	<!-- 최근 채팅 조회 -->
	<select id="getRecentChat" parameterType="int" resultType="ChatsVO">
		SELECT * 
		FROM chats 
		WHERE room_id = #{room_id} 
		ORDER BY chat_time DESC LIMIT 1
	</select>

	<!-- 안 읽은 채팅 조회 -->
	<select id="getnotReadChat" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM chats
		WHERE room_id = #{room_id} AND member_id != #{member_id} AND isRead = false
	</select>

	<!-- 채팅 내역 조회 -->
	<select id="getChatLog" parameterType="int" resultType="ChatsVO">
		SELECT *
		FROM chats 
		WHERE room_id = #{room_id} 
		ORDER BY chat_time ASC
	</select>

	<!-- 채팅 읽음 처리 -->
	<update id="readCheck" parameterType="map">
		UPDATE chats
		SET isRead = true
		WHERE room_id = #{room_id} AND member_id != #{member_id}
	</update>

	<!-- room_id로 채팅방 정보 조회 -->
	<select id="getRoomInfo" parameterType="int" resultType="ChatRoomsVO">
		SELECT *
		FROM chat_rooms
		WHERE room_id = #{room_id}
	</select>

	<!-- 사용자의 차단 정보 조회 -->
	<select id="getBlockInfo" parameterType="BlocksVO" resultType="BlocksVO">
		SELECT *
		FROM blocks
		WHERE member_id = #{member_id} AND block_id = #{block_id}
	</select>
	
	<!-- 상대방 차단 -->
	<select id="block" parameterType="BlocksVO" resultType="int">
		INSERT INTO blocks (member_id, block_id)
		VALUES (#{member_id}, #{block_id})
	</select>
	
	<!-- 차단 해제 -->
	<delete id="unblock" parameterType="int">
    DELETE
    FROM blocks
    WHERE member_id = #{member_id}
	</delete>

</mapper>